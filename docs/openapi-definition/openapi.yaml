---
openapi: 3.0.3
info:
  title: OpenAPI Definition Example
  version: 0.0.1
servers:
- url: http://localhost:8082
  description: Auto generated value
- url: http://0.0.0.0:8082
  description: Auto generated value
tags:
- name: Account Operations
  description: Operations for account management
- name: Authenticate Operations
  description: Operations for Authentication
paths:
  /api/v1/account:
    get:
      tags:
      - Account Operations
      description: Fetch all accounts
      parameters:
      - name: index
        in: query
        schema:
          format: int32
          type: integer
      - name: size
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      tags:
      - Account Operations
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/account/self/password:
    patch:
      tags:
      - Account Operations
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/account/{accountId}:
    get:
      tags:
      - Account Operations
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
    delete:
      tags:
      - Account Operations
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    patch:
      tags:
      - Account Operations
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/auth/login:
    post:
      tags:
      - Authenticate Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/comment/{commentId}:
    delete:
      tags:
      - Comment Resource
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
    patch:
      tags:
      - Comment Resource
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/comment/{topicId}:
    get:
      tags:
      - Comment Resource
      parameters:
      - name: topicId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
      - Comment Resource
      parameters:
      - name: topicId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/topic:
    get:
      tags:
      - Topic Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      tags:
      - Topic Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/topic/{topicId}:
    get:
      tags:
      - Topic Resource
      parameters:
      - name: topicId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
      - Topic Resource
      parameters:
      - name: topicId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    patch:
      tags:
      - Topic Resource
      parameters:
      - name: topicId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    AccountResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        accountName:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        birthday:
          $ref: '#/components/schemas/LocalDate'
        email:
          type: string
        phoneNumber:
          type: string
        roles:
          $ref: '#/components/schemas/AccountRole'
    AccountRole:
      type: object
      properties:
        roleId:
          format: int64
          type: integer
        roleName:
          type: string
    AuthRequest:
      type: object
      properties:
        accountName:
          type: string
        password:
          type: string
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
